---
# Play-1: Configuring the Master Node
- name: Installing XtraDB
  hosts: all
  become: true
  become_user: root
  tasks:
    - name: Install necessary packages
      ansible.builtin.apt:
        update_cache: true
        name:
          - wget
          - gnupg2
          - lsb-release
          - curl
        state: present

  
    - name: Download the repository package
      ansible.builtin.shell:
        cmd: wget -P /tmp/ https://repo.percona.com/apt/percona-release_latest.generic_all.deb

    - name: Install the package
      ansible.builtin.apt:
        deb: /tmp/percona-release_latest.generic_all.deb


    - name: Refresh the local cache to update the package information
      register: sysupdate
      ansible.builtin.apt:
        update_cache: true


    - name: Display the last line of the previous task to check the stats
      ansible.builtin.debug:
        msg: "{{ sysupdate }}"


    - name: Enable the release repository for Percona XtraDB Cluster
      ansible.builtin.shell:
        cmd: percona-release setup pxc80


    - name: Install the XtraDB Cluster
      ansible.builtin.apt:
        name:
          - percona-xtradb-cluster
        state: present

# Play-2: Bootstrap the first Node
- name: Bootstrap the first Node
  hosts: master
  become: true
  become_user: root
  vars_files:
    - vars.yml
  tasks:
    - name: Adding Nodes IPs
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf 
        regexp: '^wsrep_cluster_address=gcomm://'
        insertafter: 'wsrep_cluster_address=gcomm://'
        line: wsrep_cluster_address=gcomm://{{ cluster_hosts }}

    - name: Disable Traffic Encryption
      ansible.builtin.blockinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf 
        block: |
          # Disable Traffic Encryption
          pxc-encrypt-cluster-traffic=OFF


    - name: Display IP Address
      register: target_ip
      ansible.builtin.debug:
        var: ansible_default_ipv4.address


    - name: Set Node IP Address
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf  
        regexp: '^wsrep_node_address='
        line: wsrep_node_address={{ target_ip["ansible_default_ipv4.address"] }}


    - name: Set Cluster Name
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf 
        regexp: '^wsrep_cluster_name='
        line: wsrep_cluster_name={{ cluster_name }}


    - name: Comment WSREP node name to use node's hostname
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf 
        regexp: '^wsrep_node_name=pxc-n1'
        line: '# wsrep_node_name=pxc-n1'


    - name: Bootstrap the first node
      ansible.builtin.service:
        name: mysql@bootstrap
        state: started


# Play-3: Bootstrap the first Node
- name: Join other Nodes
  hosts: node
  become: true
  become_user: root
  vars_files:
    - vars.yml
  tasks:
    - name: Adding Nodes IPss
      ansible.builtin.lineinfile:
      - path: /etc/mysql/mysql.conf.d/mysqld.cnf 
        regexp: '^wsrep_cluster_address=gcomm://'
        insertafter: 'wsrep_cluster_address=gcomm://'
        line: wsrep_cluster_address=gcomm://{{ cluster_hosts }}

    - name: Disable Traffic Encryption
      ansible.builtin.blockinfile:
      - path: /etc/mysql/mysql.conf.d/mysqld.cnf 
        block: |
          # Disable Traffic Encryption
          pxc-encrypt-cluster-traffic=OFF


    - name: Display IP Address
      register: target_ip
      ansible.builtin.debug:
        var: ansible_default_ipv4.address


    - name: Set Node IP Address
      ansible.builtin.lineinfile:
      - path: /etc/mysql/mysql.conf.d/mysqld.cnf  
        regexp: '^wsrep_node_address='
        line: wsrep_node_address={{ target_ip["ansible_default_ipv4.address"] }}


    - name: Set Cluster Name
      ansible.builtin.lineinfile:
      - path: /etc/mysql/mysql.conf.d/mysqld.cnf 
        regexp: '^wsrep_cluster_name='
        line: wsrep_cluster_name={{ cluster_name }}


    - name: Comment WSREP node name to use node's hostname
      ansible.builtin.lineinfile:
      - path: /etc/mysql/mysql.conf.d/mysqld.cnf 
        regexp: '^wsrep_node_name='
        line: '# wsrep_node_name='


    - name: Run Mysql Service
      ansible.builtin.service:
      - name: mysql
        state: started
